//Leetcode question no. 21
//

class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1 == nullptr && list2 == nullptr) return nullptr;
        if(list1 == nullptr) return list2;
        if(list2 == nullptr) return list1;
        ListNode* head, *tail, *curr1 = list1, *curr2 = list2;
        
        if(curr1->val <= curr2->val){
            head = curr1;
            tail = curr1;
            curr1 = curr1->next;
        }
        else{
            head = curr2;
            tail = curr2;
            curr2 = curr2->next;
        }
        
        while(curr1 && curr2){
            if(curr1->val <= curr2->val){
                tail->next = curr1;
                tail = curr1;
                curr1 = curr1->next;
            }
            else{
                tail->next = curr2;
                tail = curr2;
                curr2 = curr2->next;
            }
        }
        if(curr1){
            tail->next = curr1;
        }
        if(curr2){
            tail->next = curr2;
        }
        
        return head;
    }
};
